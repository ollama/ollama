#version 450

#include "generic_head.glsl"
#include "types.glsl"

#extension GL_EXT_control_flow_attributes : enable

#define FLT_MAX 3.402823466e+38F

layout(local_size_x_id = 0, local_size_y = 1, local_size_z = 1) in;

layout (binding = 0) readonly buffer A {A_TYPE data_a[];};
layout (binding = 1) writeonly buffer D {D_TYPE data_d[];};

layout (constant_id = 0) const uint BLOCK_SIZE = 32;

shared FLOAT_TYPE tmpmax[BLOCK_SIZE];
shared uint tmp[BLOCK_SIZE];

void main() {
    const uint row = gl_WorkGroupID.z * 262144 + gl_WorkGroupID.y * 512 + gl_WorkGroupID.x;
    const uint col = gl_LocalInvocationID.x;

    if (row >= p.KY) {
        return;
    }

    A_TYPE amax = -FLT_MAX;
    uint acol = col;

    if (col < p.KX) {
        amax = data_a[row*p.KX + col];
    }

    for (uint i = col + BLOCK_SIZE; i < p.KX; i += BLOCK_SIZE) {
        A_TYPE val = data_a[row*p.KX + i];
        if (val > amax) {
            amax = val;
            acol = i;
        }
    }

    tmp[col] = acol;
    tmpmax[col] = amax;

    barrier();
    [[unroll]] for (int s = int(BLOCK_SIZE) / 2; s > 0; s >>= 1) {
        if (col < s && col + s < p.KX) {
            if (tmpmax[col] < tmpmax[col + s]) {
                tmpmax[col] = tmpmax[col + s];
                tmp[col] = tmp[col + s];
            }
        }
        barrier();
    }

    if (col == 0) {
        data_d[row] = D_TYPE(tmp[0]);
    }
}
